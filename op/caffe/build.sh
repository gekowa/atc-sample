#!/usr/bin/env bash
# Copyright (c) Huawei Technologies Co., Ltd. 2020. All rights reserved.
###### Environment variable settings, need to set according to your own device ######


# ASCEND_TENSOR_COMPLIER_INCLUDE: The path of the header file of the ATC package, where "/usr/local/Ascend/atc/include" is the
#                                 default installation path. If user defines the installation path, please modify it.
# Uncomment and modify it when you specified installation path of ATC.
#export ASCEND_TENSOR_COMPLIER_INCLUDE=/usr/local/Ascend/atc/include

# The SYSTEM_INFO flag is the name of the form of the operator package generated by the compiler, which can be customized by the user, E.g:
#   a. If the operating system version is CentOS and the architecture is aarch64, it can be set to centos_aarch64, and the operator package name generated by compilation is custom_opp_centos_aarch64.run.
#   b. If the operating system version is CentOS and the architecture is x86_64, it can be set to centos_x86_64, and the name of the operator package generated by compilation is custom_opp_centos_x86_64.run.
#   c. If the SYSTEM_INFO environment variable is not set, the default value is used: ubuntu_x86_64, and the operator package name generated by compilation is custom_opp_ubuntu_x86_64.run.
# Uncomment and modify it when you need to specify os and architecture.
#export SYSTEM_INFO=ubuntu_x86_64

###### The following logic can be used without modification ######

log() {
  cur_date=`date +"%Y-%m-%d %H:%M:%S"`
  echo "[$cur_date] "$1
}

project_path=$(cd "$(dirname "$0")"; pwd)
if [ $1 == "clean" ] 2>/dev/null; then
  rm -rf $project_path/caffe.proto 2>/dev/null
  rm -rf $project_path/caffe.proto.origin 2>/dev/null
  rm -rf $project_path/build_out 2>/dev/null
  rm -rf $project_path/framework/caffe_plugin/proto/caffe 2>/dev/null
  log "[INFO] Clean successfully."
  exit 0
fi
chmod -R 755 $project_path/cmake/util/
mkdir -p $project_path/build_out


# Check for caffe_plugin files, If there is no plugin file, terminate subsequent operations.
cpp_files_num=$(ls $project_path/framework/caffe_plugin/*.cpp 2> /dev/null | wc -l)
if [ "$cpp_files_num" == "0" ]; then
  log "[INFO] No caffe plugin files, please check."
  exit 0
fi

cd build_out
rm -rf *.run
log "[INFO] Cmake begin."
cmake .. -DCMAKE_CXX_COMPILER=g++
if [ $? -ne 0 ]; then
  log "[ERROR] Please check cmake result."
  exit 1
fi

log "[INFO] Make begin."
make -j
if [ $? -ne 0 ]; then
  log "[ERROR] Please check make result."
  exit 1
fi
log "[INFO] Build successfully, the target is in $project_path/build_out."
